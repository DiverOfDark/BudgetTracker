using System;
using System.Collections.Generic;
using System.Linq;
using BudgetTracker.Model;

namespace BudgetTracker.Controllers.ViewModels.Widgets
{
    public class ExpensesWidgetViewModel : WidgetViewModel
    {
        public ExpensesWidgetViewModel(WidgetModel model, ObjectRepository repository, int? period) : base(model, new ExpensesWidgetSettings(model.Properties.ToDictionary(v=>v.Key, v=>v.Value)))
        {
            Period = Math.Max(1, period ?? 1);
            ExpenseSettings = (ExpensesWidgetSettings) Settings;
            var payments = repository.Set<PaymentModel>()
                .Where(v => IsApplicable(v.When, Period) && v.Ccy == ExpenseSettings.Currency &&
                            v.Kind == PaymentKind.Expense && !v.Autogenerated)
                .ToList();


            var data = payments.OrderByDescending(v => -v.Amount).Select(v =>
            {
                var value = (int) -v.Amount;

                var name = "";
                if (!string.IsNullOrWhiteSpace(v.Category?.Category))
                    name = v.Category.Category;
                else if (!string.IsNullOrWhiteSpace(v.Debt?.Description))
                    name = v.Debt.Description;
                else
                {
                    name = v.What;
                    if (name.Length > 32)
                        name = name.Remove(31) + "…";
                }

                return new {name, value};
            }).GroupBy(v => v.name).Select(v => new {name = v.Key, value = v.Sum(s => s.value)}).OrderByDescending(v=>v.value).ToList();

            var toRemove = data.Skip(10).ToList();
            data = data.Take(10).ToList();

            var values = data.Select(v => v.value).ToList();
            var names = data.Select(v => v.name).ToList();
            
            names.Add("Остальное");
            values.Add(toRemove.Select(s => s.value).Sum());

            Values = values;
            Names = names;
        }

        public List<string> Names { get; set; }

        public List<int> Values { get; set; }

        public ExpensesWidgetSettings ExpenseSettings { get; set; }

        public override int Columns => 8;
        public override int Rows => 2;
        public int Period { get; set; }
    }
}