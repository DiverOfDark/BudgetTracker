using System;
using System.Collections.Generic;
using System.Linq;
using BudgetTracker.Controllers.ViewModels.Payment;
using BudgetTracker.Model;

namespace BudgetTracker.Controllers.ViewModels.Widgets
{
    public class ExpensesWidgetViewModel : WidgetViewModel
    {
        public ExpensesWidgetViewModel(WidgetModel model, ObjectRepository repository, int? period) : base(model, new ExpensesWidgetSettings(model.Properties.ToDictionary(v=>v.Key, v=>v.Value)))
        {
            Period = Math.Max(1, period ?? 1);
            ExpenseSettings = (ExpensesWidgetSettings) Settings;
            Payments = repository.Set<PaymentModel>()
                .Where(v => IsApplicable(v.When, Period) && v.Ccy == ExpenseSettings.Currency &&
                            v.Kind == PaymentKind.Expense && !v.Autogenerated)
                .Select(v => new PaymentViewModel(v))
                .ToList();
        }

        public ExpensesWidgetSettings ExpenseSettings { get; set; }

        public IEnumerable<PaymentViewModel> Payments { get; }

        public override int Columns => 8;
        public override int Rows => 2;
        public int Period { get; set; }
    }
}