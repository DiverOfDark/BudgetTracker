using System;
using System.Linq;
using BudgetTracker.Model;

namespace BudgetTracker.Services
{
    public class RepositoryCleanupService
    {
        private readonly ObjectRepository _objectRepository;

        public RepositoryCleanupService(ObjectRepository objectRepository)
        {
            _objectRepository = objectRepository;
        }
        
        public void Run()
        {
            var yesterday = _objectRepository.Set<MoneyStateModel>()
                .Where(v => v.When < DateTime.UtcNow.AddDays(-2)).ToList();

            var groupedWeek = yesterday.GroupBy(v => v.Column.Provider + v.Column.AccountName + v.When.ToShortDateString());
            var badWeek = groupedWeek.SelectMany(v => v.OrderByDescending(s => s.When).Skip(1)).ToList();
            _objectRepository.RemoveRange(badWeek);
            
            _objectRepository.Remove<PaymentModel>(v=> v.Autogenerated && Math.Abs(v.Amount) <= 0.01);

            var dups = _objectRepository.Set<MoneyColumnMetadataModel>().Where(v => !v.IsComputed)
                .GroupBy(v => v.Provider + v.AccountName).Where(v => v.Count() > 1);
            foreach (var group in dups)
            {
                var ok = group.First();

                var toDelete = group.Skip(1).ToList();

                foreach (var msm in _objectRepository.Set<MoneyStateModel>().Where(v => toDelete.Contains(v.Column)))
                {
                    msm.Column = ok;
                }

                _objectRepository.RemoveRange(toDelete);
            }
        }
    }
}